import random
import datetime


def get_first_name():
    list_of_first_names = ['Аарон', 'Абрам', 'Аваз', 'Августин', 'Авраам', 'Агап', 'Агапит', 'Агат', 'Агафон', 'Адам', 'Адриан', 'Азамат', 'Азат', 'Азиз', 'Аид', 'Айдар', 'Айрат', 'Акакий', 'Аким', 'Алан', 'Александр', 'Алексей', 'Али', 'Алик', 'Алим', 'Алихан', 'Алишер', 'Алмаз', 'Альберт', 'Амир', 'Амирам', 'Амиран', 'Анар', 'Анастасий', 'Анатолий', 'Анвар', 'Ангел', 'Андрей', 'Анзор', 'Антон', 'Анфим', 'Арам', 'Аристарх', 'Аркадий', 'Арман', 'Армен', 'Арсен', 'Арсений', 'Арслан', 'Артём', 'Артемий', 'Артур', 'Архип', 'Аскар', 'Аслан', 'Асхан', 'Асхат', 'Ахмет', 'Ашот', 'Бахрам', 'Бенджамин', 'Блез', 'Богдан', 'Борис', 'Борислав', 'Бронислав', 'Булат', 'Вадим', 'Валентин', 'Валерий', 'Вальдемар', 'Вардан', 'Василий', 'Вениамин', 'Виктор', 'Вильгельм', 'Вит', 'Виталий', 'Влад', 'Владимир', 'Владислав', 'Владлен', 'Влас', 'Всеволод', 'Вячеслав', 'Гавриил', 'Гамлет', 'Гарри', 'Геннадий', 'Генри', 'Генрих', 'Георгий', 'Герасим', 'Герман', 'Германн', 'Глеб', 'Гордей', 'Григорий', 'Густав', 'Давид', 'Давлат', 'Даврон', 'Дамир', 'Дана', 'Даниил', 'Данил', 'Данис', 'Данислав', 'Даниэль', 'Данияр', 'Дарий', 'Даурен', 'Даян', 'Демид', 'Демьян', 'Денис', 'Джамал', 'Джан', 'Джеймс', 'Джереми (Иеремия)', 'Джозеф', 'Джонатан', 'Дик', 'Дин', 'Динар', 'Дино', 'Дмитрий', 'Добрыня', 'Доминик', 'Евгений', 'Евдоким', 'Евсей', 'Евстахий', 'Егор', 'Елисей', 'Емельян', 'Еремей', 'Ефим', 'Ефрем', 'Ждан', 'Жерар', 'Жигер', 'Закир', 'Заур', 'Захар', 'Зенон', 'Зигмунд', 'Зиновий', 'Зураб', 'Зуфар', 'Ибрагим', 'Иван', 'Игнат', 'Игнатий', 'Игорь', 'Иероним', 'Иисус', 'Ильгиз', 'Ильнур', 'Ильшат', 'Илья', 'Ильяс', 'Имран', 'Иннокентий', 'Ираклий', 'Исаак', 'Исаакий', 'Исидор', 'Искандер', 'Ислам', 'Исмаил', 'Итан', 'Казбек', 'Камиль', 'Карен', 'Карим', 'Карл', 'Ким', 'Кир', 'Кирилл', 'Клаус', 'Клим', 'Конрад', 'Константин', 'Коре', 'Корнелий', 'Кристиан', 'Кристофер', 'Кузьма', 'Лаврентий', 'Ладо', 'Лев', 'Леви', 'Ленар', 'Леон', 'Леонард', 'Леонид', 'Леопольд', 'Лоренс', 'Лука', 'Лукиллиан', 'Лукьян', 'Любомир', 'Людвиг', 'Людовик', 'Люций', 'Маджид', 'Майкл', 'Макар', 'Макарий', 'Максим', 'Максимилиан', 'Максуд', 'Мансур', 'Мар', 'Марат', 'Марк', 'Марсель', 'Мартин (Мартын)', 'Матвей', 'Махмуд', 'Мика', 'Микула', 'Милослав', 'Мирон', 'Мирослав', 'Михаил', 'Моисей', 'Мстислав', 'Мурат', 'Муслим', 'Мухаммед', 'Мэтью', 'Назар', 'Наиль', 'Нариман', 'Натан', 'Нестор', 'Ник', 'Никита', 'Никодим', 'Никола', 'Николай', 'Нильс', 'Ной', 'Нурлан', 'Огюст', 'Олег', 'Оливер', 'Орест', 'Орландо', 'Осип', 'Оскар', 'Осман', 'Остап', 'Остин', 'Павел', 'Панкрат', 'Пантелеймон', 'Патрик', 'Педро', 'Перри', 'Пётр', 'Платон', 'Потап', 'Прохор', 'Равиль', 'Радий', 'Радик', 'Радомир', 'Радослав', 'Разиль', 'Раиль', 'Раиф', 'Райан', 'Раймонд', 'Рамазан', 'Рамзес', 'Рамиз', 'Рамиль', 'Рамон', 'Ранель', 'Расим', 'Расул', 'Ратибор', 'Ратмир', 'Раушан', 'Рафаэль', 'Рафик', 'Рашид', 'Ринат (Ренат)', 'Ричард', 'Роберт', 'Родим', 'Родион', 'Рожден', 'Ролан', 'Роман', 'Ростислав', 'Рубен', 'Рудольф', 'Руслан', 'Рустам', 'Рэй', 'Савва', 'Савелий', 'Саид', 'Салават', 'Самат', 'Самвел', 'Самир', 'Самсон', 'Самуил', 'Санжар', 'Сани', 'Саян', 'Святослав', 'Севастьян', 'Семён', 'Серафим', 'Сергей', 'Сидор', 'Симба', 'Соломон', 'Спартак', 'Станислав', 'Степан', 'Сулейман', 'Султан', 'Сурен', 'Тагир', 'Таир', 'Тайлер', 'Талгат', 'Тамаз', 'Тамерлан', 'Тарас', 'Тахир', 'Тигран', 'Тимофей', 'Тимур', 'Тихон', 'Томас', 'Трофим', 'Уинслоу', 'Умар', 'Устин', 'Фазиль', 'Фарид', 'Фархад', 'Фёдор', 'Федот', 'Феликс', 'Филипп', 'Флор', 'Фома', 'Фред', 'Фридрих', 'Хабиб', 'Хаким', 'Харитон', 'Хасан', 'Цезарь', 'Цефас', 'Цецилий (Сесил)', 'Цицерон', 'Чарльз', 'Чеслав', 'Чингиз', 'Шамиль', 'Шарль', 'Шерлок', 'Эдгар', 'Эдуард', 'Эльдар', 'Эмиль', 'Эмин', 'Эрик', 'Эркюль', 'Эрмин', 'Эрнест', 'Эузебио', 'Юлиан', 'Юлий', 'Юнус', 'Юрий', 'Юстиниан', 'Юстус', 'Яков', 'Ян', 'Яромир', 'Ярослав']
    return random.choice(list_of_first_names)


def get_second_name():
    list_of_second_names = ['Смирнов', 'Иванов', 'Кузнецов', 'Соколов', 'Попов', 'Лебедев', 'Козлов', 'Новиков', 'Морозов', 'Петров', 'Волков', 'Соловьёв', 'Васильев', 'Зайцев', 'Павлов', 'Семёнов', 'Голубев', 'Виноградов', 'Богданов', 'Воробьёв', 'Фёдоров', 'Михайлов', 'Беляев', 'Тарасов', 'Белов', 'Комаров', 'Орлов', 'Киселёв', 'Макаров', 'Андреев', 'Ковалёв', 'Ильин', 'Гусев', 'Титов', 'Кузьмин', 'Кудрявцев', 'Баранов', 'Куликов', 'Алексеев', 'Степанов', 'Яковлев', 'Сорокин', 'Сергеев', 'Романов', 'Захаров', 'Борисов', 'Королёв', 'Герасимов', 'Пономарёв', 'Григорьев', 'Лазарев', 'Медведев', 'Ершов', 'Никитин', 'Соболев', 'Рябов', 'Поляков', 'Цветков', 'Данилов', 'Жуков', 'Фролов', 'Журавлёв', 'Николаев', 'Крылов', 'Максимов', 'Сидоров', 'Осипов', 'Белоусов', 'Федотов', 'Дорофеев', 'Егоров', 'Матвеев', 'Бобров', 'Дмитриев', 'Калинин', 'Анисимов', 'Петухов', 'Антонов', 'Тимофеев', 'Никифоров', 'Веселов', 'Филиппов', 'Марков', 'Большаков', 'Суханов', 'Миронов', 'Ширяев', 'Александров', 'Коновалов', 'Шестаков', 'Казаков', 'Ефимов', 'Денисов', 'Громов', 'Фомин', 'Давыдов', 'Мельников', 'Щербаков', 'Блинов', 'Колесников', 'Карпов', 'Афанасьев', 'Власов', 'Маслов', 'Исаков', 'Тихонов', 'Аксёнов', 'Гаврилов', 'Родионов', 'Котов', 'Горбунов', 'Кудряшов', 'Быков', 'Зуев', 'Третьяков', 'Савельев', 'Панов', 'Рыбаков', 'Суворов', 'Абрамов', 'Воронов', 'Мухин', 'Архипов', 'Трофимов', 'Мартынов', 'Емельянов', 'Горшков', 'Чернов', 'Овчинников', 'Селезнёв', 'Панфилов', 'Копылов', 'Михеев', 'Галкин', 'Назаров', 'Лобанов', 'Лукин', 'Беляков', 'Потапов', 'Некрасов', 'Хохлов', 'Жданов', 'Наумов', 'Шилов', 'Воронцов', 'Ермаков', 'Дроздов', 'Игнатьев', 'Савин', 'Логинов', 'Сафонов', 'Капустин', 'Кириллов', 'Моисеев', 'Елисеев', 'Кошелев', 'Костин', 'Горбачёв', 'Орехов', 'Ефремов', 'Исаев', 'Евдокимов', 'Калашников', 'Кабанов', 'Носков', 'Юдин', 'Кулагин', 'Лапин', 'Прохоров', 'Нестеров', 'Харитонов', 'Агафонов', 'Муравьёв', 'Ларионов', 'Федосеев', 'Зимин', 'Пахомов', 'Шубин', 'Игнатов', 'Филатов', 'Крюков', 'Рогов', 'Кулаков', 'Терентьев', 'Молчанов', 'Владимиров', 'Артемьев', 'Гурьев', 'Зиновьев', 'Гришин', 'Кононов', 'Дементьев', 'Ситников', 'Симонов', 'Мишин', 'Фадеев', 'Комиссаров', 'Мамонтов', 'Носов', 'Гуляев', 'Шаров', 'Устинов', 'Вишняков', 'Евсеев', 'Лаврентьев', 'Брагин', 'Константинов', 'Корнилов', 'Авдеев', 'Зыков', 'Бирюков', 'Шарапов', 'Никонов', 'Щукин', 'Дьячков', 'Одинцов', 'Сазонов', 'Якушев', 'Красильников', 'Гордеев', 'Самойлов', 'Князев', 'Беспалов', 'Уваров', 'Шашков', 'Бобылёв', 'Доронин', 'Белозёров', 'Рожков', 'Самсонов', 'Мясников', 'Лихачёв', 'Буров', 'Сысоев', 'Фомичёв', 'Русаков', 'Стрелков', 'Гущин', 'Тетерин', 'Колобов', 'Субботин', 'Фокин', 'Блохин', 'Селиверстов', 'Пестов', 'Кондратьев', 'Силин', 'Меркушев', 'Лыткин', 'Туров']
    return random.choice(list_of_second_names)


def get_patronymic():
    list_of_patronymics = ['Александрович', 'Алексеевич', 'Анатольевич', 'Андреевич', 'Антонович', 'Аркадьевич', 'Артемович', 'Бедросович', 'Богданович', 'Борисович', 'Валентинович', 'Валерьевич', 'Васильевич', 'Викторович', 'Витальевич', 'Владимирович', 'Владиславович', 'Вольфович', 'Вячеславович', 'Геннадиевич', 'Георгиевич', 'Григорьевич', 'Данилович', 'Денисович', 'Дмитриевич', 'Евгеньевич', 'Егорович', 'Ефимович', 'Иванович', 'Иваныч', 'Игнатьевич', 'Игоревич', 'Ильич', 'Иосифович', 'Исаакович', 'Кириллович', 'Константинович', 'Леонидович', 'Львович', 'Максимович', 'Матвеевич', 'Михайлович', 'Николаевич', 'Олегович', 'Павлович', 'Палыч', 'Петрович', 'Платонович', 'Робертович', 'Романович', 'Саныч', 'Северинович', 'Семенович', 'Сергеевич', 'Станиславович', 'Степанович', 'Тарасович', 'Тимофеевич', 'Федорович', 'Феликсович', 'Филиппович', 'Эдуардович', 'Юрьевич', 'Яковлевич', 'Ярославович']
    return random.choice(list_of_patronymics)


def get_date(date_from = '2000-01-01', date_to = '2021-01-01'):
    date_from = date_from.split()[0]
    date_to = date_to.split()[0]
    date_from = datetime.datetime.strptime(date_from, "%Y-%m-%d").date()
    date_to = datetime.datetime.strptime(date_to, "%Y-%m-%d").date()
    time_delta = date_to - date_from
    random_time_delta = datetime.timedelta(random.randint(0, time_delta.days))
    new_date = date_from + random_time_delta
    return new_date
  

def get_documents():
    documents = ['Паспорт гражданина РФ',
                'Загранпаспорт гражданина РФ',
                'Статус физического лица', 
                'Анкета физического лица',
                'Акт о получении доступа в ЛК',
                'Соглашение об использовании ЭП (ФЛ)',
                'Заявление о присоединении комплексное (ФЛ)',
                'Анкета Клиента (для физических лиц)',
                'Отчет о назначении Оператора на Договор',
                'Уведомление о заключении Деп. договора',
                'Уведомление об открытии счёта ДЕПО',
                'Заявление на подключение АСП SMS',
                'Заявление о выборе условий обслуживания',
                'Поручение на открытие счета депо (Торговый МФБ)',
                'Декларация о рисках, связанных с приобретением ИЦБ',
                'Заявление о присоединении к Деп. договору',
                'Поручение о назначении ОПЕРАТОРА по счетам депо',]
    return documents

def get_passport(birthday):
    # letters = [l for l in range(ord())]
    doc_serial = f'{random.randint(0, 9999):04d}'
    doc_number = f'{random.randint(0, 999999):06d}'
    doc_date = birthday + datetime.timedelta(random.randint(18*365, 19*365))
    documents = get_documents()
    pass_rf = documents.index('Паспорт гражданина РФ') + 1
    pass_intern = documents.index('Загранпаспорт гражданина РФ') + 1
    type_doc = random.choice([pass_rf, pass_rf, pass_rf, pass_rf, pass_intern]) 
    return type_doc, doc_serial, doc_number, doc_date

def get_city():
    list_of_cyties = ['Москва', 'Санкт-Петербург', 'Новосибирск', 'Екатеринбург', 'Казань', 'Нижний', 'Челябинск', 'Омск', 'Самара', 'Ростов-на-Дону', 'Уфа', 'Красноярск', 'Пермь', 'Воронеж', 'Волгоград']
    return random.choice(list_of_cyties)

def get_inn_init(num_inns=10000):
    start = 1
    stop = 999999999999
    step = (stop - start) // num_inns
    inn_list = random.sample(range(start,stop,step), k=num_inns)
    def get_inn():
        inn = f'{inn_list.pop():012d}'
        return inn
    return get_inn

def get_address():
    list_streets = ['Абаканская улица', 'Абаканский переулок', 'Апрельский переулок', 'Аэродромная улица', 'Бейская улица', 'Береговая улица', 'Березовая улица', 'Брусничная улица', 'Васильковый переулок', 'Вербный переулок', 'Веселая улица', 'Весенняя улица', 'Улица Ветеранов труда', 'Взлетная улица', 'Воздвиженская улица', 'Вокзальная улица', 'Восточная улица', 'Улица Геологов', 'Улица Гоголя', 'Дальняя улица', 'Дачная улица', 'Улица Декабристов', 'Дорожная улица', 'Дружная улица', 'Енисейская улица', 'Жемчужная улица', 'Заветная улица', 'Заводская улица', 'Западная улица', 'Заречная улица', 'Звездная улица', 'Зеленая улица', 'Зимняя улица', 'Переулок Ивана Ярыгина', 'Улица Ивана Ярыгина', 'Улица имени 30-летия КрасноярскГЭСстроя', 'Улица имени И.В.Мичурина', 'Улица имени И.И.Шишкина', 'Улица имени И.С.Крылова', 'Улица имени Т.Г.Шевченко', 'Индустриальная улица', 'Улица Калинина', 'Карьерная улица', 'Койбальская улица', 'Курганная улица', 'Курейская улица', 'Лазурная улица', 'Улица Ленина', 'Лесная улица', 'Летняя улица', 'Линейная улица', 'Литейная улица', 'Луганская улица', 'Луговая улица', 'Лунная улица', 'Лучистая улица', 'Магистральная улица', 'Улица Мелиораторов', 'Улица Металлургов', 'Улица Мечты', 'Улица Мира', 'Молодежный переулок', 'Мраморная улица', 'Нагорная улица', 'Улица Надежды', 'Улица Некрасова', 'Новая улица', 'Новогодняя улица', 'Новоенисейская улица', 'Озерная улица', 'Означенская улица', 'Октябрьская улица', 'Октябрьский переулок', 'Олимпийская улица', 'Оросительная улица', 'Осенняя улица', 'Первомайская улица', 'Песочная улица', 'Песочный переулок', 'Пионерская улица', 'Подгорная улица', 'Полевая улица', 'Почтовая улица', 'Преображенская улица', 'Пригорная улица', 'Продольная улица', 'Прохладная улица', 'Улица Пушкина', 'Ракетная улица', 'Раскатная улица', 'Рассветная улица', 'Речная улица', 'Речной переулок', 'Родниковая улица', 'Рождественская улица', 'Сабинский переулок', 'Садовая улица', 'Саянская улица', 'Светлая улица', 'Северная улица', 'Северо-Западный жилой р-н Березовая улица', 'Серебряная улица', 'Сибирская улица', 'Снежная улица', 'Советская улица', 'Солнечная улица', 'Сосновая улица', 'Спасская улица', 'Средняя улица', 'Степная улица', 'Степной переулок', 'Строительная улица', 'Студеная улица', 'Таежная улица', 'Тальниковый переулок', 'Тенистая улица', 'Тихая улица', 'Тихорецкая улица', 'Транспортная улица', 'Туманная улица', 'Тупиковая улица', 'Улица Успенского', 'Утренняя улица', 'Фруктовая улица', 'Цветочная улица', 'Центральная улица', 'Центральный переулок', 'Черемуховая улица', 'Улица Чехова', 'Школьная улица', 'Шушенская улица', 'Улица Энтузиастов', 'Юбилейная улица', 'Южная улица', 'Ясная улица', '1-й Енисейский переулок', '2-й Абаканский переулок', '2-й Енисейский переулок', '3-й Енисейский переулок', '4-й Енисейский переулок', '5-й Енисейский переулок', '6-й Енисейский переулок', 'Улица 30 лет Победы']
    return f'г.{get_city()} д.{random.randint(1,150)} кв.{random.randint(1,99)}'


def mobile_phone_init(num_mobiles=10000):
    
    start = 10**7
    stop = 999999999
    step = (stop - start) // num_mobiles
    phone_list = random.sample(range(start,stop,step), k=num_mobiles)
    def mobile_phone():
        phone = f'89{phone_list.pop():09d}'
        return phone
    return mobile_phone

def get_mail_init():
    mail_dict = {}
    def get_mail(second_name=None, first_name=None, birth_year=1988):
        if not second_name:
            second_name = get_second_name()
        if not first_name:
            first_name = get_first_name()
        letter_ru_eng = {
            'а':'a',
            'б':'b',
            'в':'v',
            'г':'g',
            'д':'d',
            'е':'e',
            'ё':'e',
            'ж':'g',
            'з':'z',
            'и':'i',
            'й':'y',
            'к':'k',
            'л':'l',
            'м':'m',
            'н':'n',
            'о':'o',
            'п':'p',
            'р':'r',
            'с':'s',
            'т':'t',
            'у':'u',
            'ф':'f',
            'х':'h',
            'ц':'c',
            'ч':'ch',
            'ш':'sh',
            'щ':'sh',
            'ъ':'',
            'ы':'u',
            'ь':'',
            'э':'e',
            'ю':'u',
            'я':'ia',     
        }

        mail = []
        for l in second_name:
            if l.isalpha():          
                mail.append(letter_ru_eng[l.lower()])
        mail.append('_')
        for l in first_name[:3]:
            if l.isalpha():          
                mail.append(letter_ru_eng[l.lower()])
        mail.append(str(birth_year % 100))
        secon_first_name_birthyear = ''.join(mail)
        if secon_first_name_birthyear in mail_dict:
            mail_dict[secon_first_name_birthyear] += 1
            mail.append(f'_{mail_dict[secon_first_name_birthyear]}')  
        else:
            mail_dict[secon_first_name_birthyear] = 0   
        mail.append('@')
        mail.append(random.choice(['google.com', 'yandex.ru', 'mail.ru', 'rambler.ru']))
        return ''.join(mail)
    return get_mail


def get_brokerage_agreement_init(num_brokerage_agreements = 3):   
    start = 15000000000
    stop = 21999999999
    step = (stop - start) // num_brokerage_agreements
    brokerage_agreements_list = random.sample(range(start,stop,step), 
                                        k=num_brokerage_agreements)
    start = 1000000
    stop = 9999999
    step = (stop - start) // num_brokerage_agreements                                    
    account_number_list = random.sample(range(start,stop,step), 
                                        k=num_brokerage_agreements)
    start = 10000000
    stop = 99999999
    step = (stop - start) // num_brokerage_agreements                                    
    trading_code_list = random.sample(range(start,stop,step), 
                                        k=num_brokerage_agreements)  
    def get_brokerage_agreement():
        br_agr = str(brokerage_agreements_list.pop())
        rnd_data = get_date()
        br_agr = f"{br_agr[0:2]}Б/{br_agr[2:6]}-{br_agr[6:10]}/{br_agr[10:]} от {rnd_data.strftime('%d:%m:%Y')}"
        acc_num = f"КлФ-{str(account_number_list.pop())}"
        tr_code = str(trading_code_list.pop())
        tr_code = f"{tr_code[0:6]}R{tr_code[7:]}RI"
        cus_agr = f"{br_agr[0:2]}В/{br_agr[3:]}"
        # brokerage_agreement = f'{brokerage_agreements_list.pop():09d}'
        return br_agr, acc_num, tr_code, cus_agr
    return get_brokerage_agreement

def get_all_assets():

    shares_dict = {'ГАЗПРОМ ао': '335.3', 'Сбербанк': '297.86', 'ЛУКОЙЛ': '6598', 'Yandex clA': '4826.4', 'ГМКНорНик': '21932', 'Новатэк ао': '1662', 'TCS-гдр': '6167.6', 'Роснефть': '573.2', 'Polymetal': '1266.8', 'Полюс': '12995', 'Магнит ао': '5874', 'Сургнфгз': '38.465', 'Татнфт': '489.8', 'АЛРОСА ао': '125.42', 'СевСт-ао': '1595.2', 'НЛМК ао': '211.1', 'МТС-ао': '285.6', 'FIVE-гдр': '2107.5', 'Сбербанк-п': '278.3', 'МосБиржа': '151.92', 'ВТБ ао': '0.04679', 'Сургнфгз-п': '38.195', 'РУСАЛ ао': '70.4', 'ФосАгро ао': '5632', 'ИнтерРАОао': '4.385', 'OZON-адр': '2605', 'FIXP-гдр': '590.5', 'ПИК ао': '1161.6', 'ММК': '63.365', 'VK-гдр': '1022.8', 'iHHRU-адр': '3996', 'Ростел -ао': '87.21', 'Транснф ап': '147350', 'РусГидро': '0.7392', 'Система ао': '22.957', 'ДетскийМир': '130.46', 'Татнфт': '489.8', 'Аэрофлот': '60.76', 'GLTR-гдр': '567.75', 'Petropavl': '20.945', 'МКБ ао': '6.414', 'ФСК ЕЭС': '0.16672', 'ЛСР ао': '720'}

    bonds_dict = ['ОФЗ-53007-Н', 'ОФЗ-52004-ИН', 'ОФЗ-26212-ПД', 'ОФЗ-29007-ПК', 'ОФЗ-29008-ПК', 'ОФЗ-29010-ПК', 'ОФЗ-26219-ПД', 'ОФЗ-29012-ПК', 'ОФЗ-26220-ПД', 'ОФЗ-26221-ПД', 'ОФЗ-26222-ПД', 'ОФЗ-26223-ПД', 'ОФЗ-26225-ПД', 'ОФЗ-52002-ИН', 'ОФЗ-25083-ПД', 'ОФЗ-26226-ПД', 'ОФЗ-26209-ПД', 'ОФЗ-46020-АД', 'ОФЗ-26211-ПД', 'ОФЗ-26227-ПД', 'ОФЗ-29006-ПК', 'ОФЗ-26218-ПД', 'ОФЗ-26224-ПД', 'ОФЗ-26228-ПД', 'ОФЗ-26229-ПД', 'ОФЗ-24020-ПК', 'ОФЗ-26231-ПД', 'ОФЗ-29009-ПК', 'ОФЗ-26232-ПД', 'ОФЗ-24021-ПК', 'ОФЗ-25084-ПД', 'ОФЗ-29013-ПК', 'ОФЗ-26207-ПД', 'ОФЗ-26234-ПД', 'ОФЗ-53006-Н', 'ОФЗ-52003-ИН', 'ОФЗ-26215-ПД', 'ОФЗ-46023-АД', 'ОФЗ-29016-ПК', 'ОФЗ-29020-ПК', 'ОФЗ-29018-ПК', 'ОФЗ-26235-ПД', 'ОФЗ-29017-ПК', 'ОФЗ-46022-АД', 'ОФЗ-29014-ПК', 'ОФЗ-29019-ПК', 'ОФЗ-26233-ПД', 'ОФЗ-25085-ПД', 'ОФЗ-26230-ПД', 'ОФЗ-29015-ПК', 'ОФЗ-26237-ПД', 'ОФЗ-26238-ПД', 'ОФЗ-26239-ПД', 'ОФЗ-26240-ПД', 'ОФЗ-26236-ПД', 'ОФЗ-46012-АД', 'ОФЗ-53008-Н', 'Альфа-Банк-002Р-05-боб', 'Альфа-Банк-002Р-08-боб', 'ВБРР-001Р-04-боб', 'ВБРР-001Р-05-боб', 'ГПБ-17-боб', 'ВЭБ.РФ-001Р-05-об', 'ВЭБ.РФ-001Р-17-об', 'ГТЛК-001Р-14-боб', 'ГТЛК-001Р-04-боб', 'Газпром капитал-5-боб', 'МСП Банк-2-об', 'МосковКредБанк-001Р-01', 'МосковКредБанк-001Р-03', 'ПИК СЗ-БО-ПО2', 'РЕСО-Лизинг-БО-П-02', 'РЕСО-Лизинг-БО-П-07', 'РЖД-001P-12R', 'РЖД-001Б-01', 'РН Банк-001Р-04', 'РОСНАНО-БО-002Р-03', 'РСХБ-БO-01R-P', 'РСХБ-06Р-боб', 'Роснефть-002Р-04-боб', 'Роснефть-001Р-04-боб', 'Роснефть-1-боб', 'Роснефть-7-боб', 'Сбербанк-001Р-SBER19', 'Сбербанк-001Р-SBER18', 'Сбербанк-001Р-SBER17', 'Сбербанк-001Р-SBER12', 'Сбербанк-001-16R', 'Сбербанк-001-06R', 'Сбербанк-001Р-SBER15', 'Сбербанк-001Р-SBER32', 'Сбербанк-001Р-SBER16', 'Сегежа Групп-001P-01R', 'СистемаАФК-1Р-21-боб', 'СистемаАФК-1Р-23-боб', 'СистемаАФК-1Р-13-боб', 'Тинькофф Банк-001P-02R', 'Хэдхантер-001Р-01R']
    bonds_dict = {b:f'{round(random.random(),3)+random.randint(800,1100)}' for b in bonds_dict}

    currency_dict = {'rub': '1', 'usd': '75'}

    return {'currency_dict': currency_dict, 'shares_dict': shares_dict, 'bonds_dict': bonds_dict}
    
def get_assets(num_shares = 10, num_bonds = 5):
    assets_dict = get_all_assets()

    shares_list = assets_dict['shares_dict'].keys()
    bonds_list = assets_dict['bonds_dict'].keys()
    currency_set = assets_dict['currency_dict'].keys()

    shares_set = random.sample(shares_list, k=num_shares)
    bonds_set = random.sample(bonds_list, k=num_bonds)
    return {'currency_set': currency_set, 'shares_set': shares_set, 'bonds_set': bonds_set}





if __name__ == '__main__':
    pass
    today = datetime.datetime.today().date()
    print(today)
    # get_brokerage_agreement = get_brokerage_agreement_init(5)
    # print(get_brokerage_agreement())
    # print(get_brokerage_agreement())

    # result_set = []
    # with open('names.txt', encoding='utf-8') as f:
    #     for line in f:
    #         parts = line.split()
    #         if not parts[3][0].isdigit():
    #             share = f'{parts[2]} {parts[3]}'
    #             price = parts[5]
    #         else:
    #             share = parts[2]
    #             price = parts[4]
    #         result_set.append(f"'{share.strip()}': '{price.strip()}'")
        
    # with open('names2.txt', 'w', encoding='utf-8') as f:
    #     f.write(', '.join(result_set))

