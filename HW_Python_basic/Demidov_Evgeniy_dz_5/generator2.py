# Есть два списка:
# tutors = [
#     'Иван', 'Анастасия', 'Петр', 'Сергей', 
#     'Дмитрий', 'Борис', 'Елена'
# ]
# klasses = [
#     '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А'
# ]

# Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
# ('Иван', '9А')
# ('Анастасия', '7В')
# ...

# Количество генерируемых кортежей не должно быть больше длины списка tutors. Если в списке klasses меньше элементов, чем в списке tutors, необходимо вывести последние кортежи в виде: (<tutor>, None), например:
# ('Станислав', None)

# Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения. 
# Подумать, в каких ситуациях генератор даст эффект. 
# (Ответ) Когда необходимо быстро получить первые данные из последовательности, генератор справляется отлично, так как не тратит время на обработку всех данных, а только первой порции.
import itertools
tutors = [
    'Иван', 
    'Анастасия', 
    'Петр', 
    'Сергей', 
    'Дмитрий', 
    'Борис', 
    'Елена'
]
klasses = [
    '9А', 
    '7В', 
    '9Б', 
    '9В', 
    '8Б', 
    '10А'
]

result_gen = ((tutors[i], klasses[i] if len(klasses)>i else None) for i in range(len(tutors)))

print(type(result_gen))
for res in result_gen:
    print(res)





