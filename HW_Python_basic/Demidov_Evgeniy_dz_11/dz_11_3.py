# Создать собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только числами. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class NotNumError(Exception):
    def __init__(self, msg):
        self.args = (msg,)

def my_int(element):
    try:
        num = int(element)
    except Exception as e:
        raise NotNumError('You try convert not number to integer!') 
    return num

def fill_list_from_input():
    element = None
    new_list = []
    while ((element := input("Enter num for list or 'stop' : ")).lower() 
            != 'stop'):       
        try:
            num = my_int(element)
        except NotNumError as e:
            print(e)
        else:
            new_list.append(num)

    return new_list
           
print(fill_list_from_input())

