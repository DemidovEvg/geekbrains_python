HEAD - Снимок последнего коммита, родитель следующего
Индекс - Снимок следующего намеченного коммита
Рабочий Каталог - Песочница


git config                    #настройка и конфигурация
git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git help

git init
git clone https://github.com/libgit2/libgit2 #клонировать из репозитория
git pull                      #взять изменения с удаленного репозитория и слить их с локальным
git push                      #отправить изменения на удаленный репозиторий
git remote show origin url    #включить пульт

git push origin --delete test #удалить удаленную ветку
git ls-remote origin          #прочитать удаленный ветки

git branch                    #отобразить локальные ветки
git branch -vv                #отобразить ветки слежения
git branch --all              #отобразить все ветки
git branch -u origin/serverfix    #настроить слежене за удаленной веткой
git push --set-upstream origin main #делает ветку доступной в удалённом репозитории

git merge <branch>            #слить текущую ветку с указанной
git mergetool                 #программа слияния
git cherry-pick               #взять некоторые коммиты и применяет к текущей ветке
git rebase                    #это «автоматизированный» cherry-pick, перемещает цепочку коммитов на указанную ветку

git log                       #история коммитов для выхода из less: q,Q, :q, :Q и ZZ
git log -p                    #история коммитов с выводом всех изменений
git log --stat                #история коммитов с выводом количества изменений в файлах
git log --pretty=oneline      #история коммитов сокращенная форма
git log --decorate            #история коммитов с указателями веток
git log --graph               #история коммитов в виде графа
git log --graph --pretty=oneline #история коммитов самый красивый вариант!!!

git add                       /. or test.py/ #добавить содержимое
git status                    #состояние файлов
git commit -m 'descriprion'   #сделать коммит
git commit --amend            #слить текущий коммит с предыдущим
git ls-files -s               #как выглядит Индекс сейчас
git log --name-status         #состав коммита
git ls-tree -r HEAD           #как выглядит HEAD сечас
Git rm --cached .             #удалить файлы из индекса
Git add .                     #удалить все файлы из индекса

git reset --soft HEAD~        #смещает именно HEAD+branch, Рабочий Каталог и Индекс остается прежним
git reset HEAD~ or git reset --mexed HEAD~      # git reset --soft HEAD~ + сбрасывает Индекс, Рабочий Католог без изменений
git reset --hard HEAD~        #сбрасывает и HEAD и Индекс и Рабочий Каталог (опасно - удаляет данные)
git restore --staged CONTRIBUTING.md # отмена индексации

B,C - родители для A
 D   E   F
   \  |  / \
    \ | /   |
     \|/    |
      B     C
       \   /
        \ /
         A
A = A^
B = A^ = A~
C = A^2
D = A^^  = A~2
E = B^2  = A^^2
F = B^3  = A^^3

git checkout коммит           #открепляет HEAD и смещает его на нужный коммит
git checkout -b new_branch_name #создать и переключится на новую ветку

git tag                       #для пометки коммитов для релизов v1,2,3
git stash                     #временное сохранение изменений



